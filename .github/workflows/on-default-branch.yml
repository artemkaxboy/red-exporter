# Jobs to run on PR, tests, lint, check, etc.
name: Default branch build

on:
  push:
    branches:
      - main

jobs:

  build-and-publish-default-branch:

    name: Build and publish default branch
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine variables
        run: |
          echo "VERSION=SNAPSHOT" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_applicationVersion=SNAPSHOT" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_lastCommitTime=$(git log -1 --format=%cd --date=iso-strict)" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_lastCommitHash=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_refName=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-default
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 15

#        TODO add tests, test-coverage and uncomment the blocks
#        @SEE https://github.dev/artemkaxboy/SpringDataShowroom/tree/master/.github/workflows
#      - name: Run check
        # @doc https://github.com/eskatos/gradle-command-action
#        uses: eskatos/gradle-command-action@v1
#        with:
#          arguments: check jacocoTestReport

#      - uses: actions/upload-artifact@v2
#        with:
#          name: test-result
#          path: ./build/reports/tests/test/
#        if: always()

#      - name: Upload coverage result
#        env:
#          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
#        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report

      - name: Publish GitHub
        uses: eskatos/gradle-command-action@v1
        env:
          CONTAINER_REGISTRY_USERNAME: ${{ github.actor }}
          CONTAINER_REGISTRY_TOKEN: ${{ secrets.GH_REGISTRY_TOKEN }}
          IMAGE_NAME: ghcr.io/${{ github.repository }}
          IMAGE_TAG: ${{ env.VERSION }}
        with:
          arguments: |
              jib
                -Dorg.gradle.console=plain
                -Djib.to.image=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

#      - name: Publish dockerhub
#        uses: eskatos/gradle-command-action@v1
#        env:
#          CONTAINER_REGISTRY_USERNAME: ${{ github.actor }}
#          CONTAINER_REGISTRY_TOKEN: ${{ secrets.DOCKERHUB_REGISTRY_TOKEN }}
#          IMAGE_NAME: ${{ github.repository }}
#          IMAGE_TAG: ${{ env.VERSION }}
#        with:
#          arguments: |
#              jib
#                -Dorg.gradle.console=plain
#                -Djib.to.image=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
