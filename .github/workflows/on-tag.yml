# Jobs to run on PR, tests, lint, check, etc.
name: Default branch build

on:
  push:
    tags:
      - v*

jobs:

  build-and-publish-default-branch:

    name: Build and publish tag
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine variables
        run: |
          export PATCH_VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=latest" >> $GITHUB_ENV
          echo "PATCH_VERSION=${PATCH_VERSION}" >> $GITHUB_ENV
          echo "MINOR_VERSION=${PATCH_VERSION%.*}" >> $GITHUB_ENV
          echo "MAJOR_VERSION=${PATCH_VERSION%.*.*}" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_applicationVersion=SNAPSHOT" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_lastCommitTime=$(git log -1 --format=%cd --date=iso-strict)" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_lastCommitHash=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_refName=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-default
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 15

#        TODO add tests, test-coverage and uncomment the blocks
#        @SEE https://github.dev/artemkaxboy/SpringDataShowroom/tree/master/.github/workflows
#      - name: Run check
        # @doc https://github.com/eskatos/gradle-command-action
#        uses: eskatos/gradle-command-action@v1
#        with:
#          arguments: check jacocoTestReport

#      - uses: actions/upload-artifact@v2
#        with:
#          name: test-result
#          path: ./build/reports/tests/test/
#        if: always()

#      - name: Upload coverage result
#        env:
#          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
#        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report

      - name: Docker login
        env:
          GH_REGISTRY_USERNAME: ${{ github.actor }}
          GH_REGISTRY_TOKEN: ${{ secrets.GH_REGISTRY_TOKEN }}
          DOCKER_REGISTRY_USERNAME: ${{ github.actor }}
          DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
        run: |
          echo ${GH_REGISTRY_TOKEN} | docker login ghcr.io -u ${GH_REGISTRY_USERNAME} --password-stdin
          echo ${DOCKER_REGISTRY_TOKEN} | docker login -u ${DOCKER_REGISTRY_USERNAME} --password-stdin

      - name: Publish dockerhub
        uses: eskatos/gradle-command-action@v1
        env:
          IMAGE_NAME: ${{ github.repository }}
          IMAGE_TAG: ${{ env.VERSION }}
          IMAGE_TAGS: ${{ env.VERSION }},${{ env.PATCH_VERSION }},${{ env.MINOR_VERSION }},${{ env.MAJOR_VERSION }}
        with:
          arguments: |
            jib
              -Dorg.gradle.console=plain
              -Djib.to.image=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
              -Djib.to.tags=${{ env.IMAGE_TAGS }}

       - name: Publish GitHub
         uses: eskatos/gradle-command-action@v1
         env:
           IMAGE_NAME: ghcr.io/${{ github.repository }}
           IMAGE_TAG: ${{ env.VERSION }}
           IMAGE_TAGS: ${{ env.VERSION }},${{ env.PATCH_VERSION }},${{ env.MINOR_VERSION }},${{ env.MAJOR_VERSION }}
         with:
           arguments: |
               jib
                 -Dorg.gradle.console=plain
                 -Djib.to.image=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
                 -Djib.to.tags=${{ env.IMAGE_TAGS }}
